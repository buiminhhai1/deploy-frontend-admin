{"version":3,"sources":["containers/DetailUser/DetailUser.js"],"names":["Paragraph","Typography","Title","DetailUser","props","state","home","location","userDetail","to","userColumns","title","dataIndex","key","render","text","record","_id","nameUserContract","emailUserContract","from","totalHourCommit","hourRate","color","mesStatus","status","type","disabled","allowHalf","value","score","style","fontSize","marginLeft","this","onRefresherDetailUser","email","name","imageUrl","isTeacher","experience","verify","contracts","extraContent","display","width","justifyContent","timeCommit","marginRight","prefix","content","className","level","skill","map","item","index","length","introduction","description","toUpperCase","educationLevel","city","district","bordered","columns","dataSource","rowKey","background","border","subTitle","tags","avatar","src","extra","availability","trigger","theme","twoToneColor","defaultValue","Component","connect","dispatch","actions"],"mappings":"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","file":"static/js/21.25ed65a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  PageHeader,\r\n  Tag,\r\n  Typography,\r\n  Divider,\r\n  Icon,\r\n  Popover,\r\n  Statistic,\r\n  Rate,\r\n  Row,\r\n  Table\r\n} from 'antd';\r\nimport { Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst { Paragraph, Title } = Typography;\r\n\r\nclass DetailUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      home: this.props.location.userDetail ? null : <Redirect to=\"/\" />,\r\n      userColumns: [\r\n        {\r\n          title: 'Stakeholder info',\r\n          dataIndex: 'stakeholder',\r\n          key: 'stakeholder',\r\n          render: (text, record) => {\r\n            return (\r\n              <div key={record._id + 'name'}>\r\n                <strong>{record.nameUserContract}</strong>\r\n                <br />\r\n                <strong>{record.emailUserContract}</strong>\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'Time contract',\r\n          dataIndex: 'timecontract',\r\n          key: 'timecontract',\r\n          render: (text, record) => {\r\n            return (\r\n              <div key={record._id + 'time'}>\r\n                from {record.from}\r\n                <br />\r\n                to {record.to}\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'Hour & price',\r\n          dataIndex: 'ourRate',\r\n          key: 'ourRate',\r\n          render: (text, record) => {\r\n            return (\r\n              <div key={record._id + 'price'}>\r\n                <strong key={record._id + 'price1'}>\r\n                  {record.totalHourCommit}hrs\r\n                </strong>\r\n                <br />\r\n                <strong key={record._id + 'price2'}>{record.hourRate}$</strong>\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'Value',\r\n          dataIndex: 'valueofcontract',\r\n          key: 'valueofcontract',\r\n          render: (text, record) => {\r\n            return (\r\n              <div key={record._id + 'value'}>\r\n                {record.totalHourCommit * record.hourRate} $\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'Status',\r\n          dataIndex: 'status',\r\n          key: 'status',\r\n          render: (text, record) => {\r\n            let color;\r\n            let mesStatus;\r\n            switch (record.status) {\r\n              case 1:\r\n                color = 'green';\r\n                mesStatus = 'Successed';\r\n                break;\r\n              case 2:\r\n                color = 'red';\r\n                mesStatus = 'Failed';\r\n                break;\r\n              default:\r\n                color = 'blue';\r\n                mesStatus = 'Pending';\r\n                break;\r\n            }\r\n            return (\r\n              <Tag key={record._id + 'status'} color={color}>\r\n                {mesStatus}\r\n              </Tag>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'Rating',\r\n          dataIndex: 'rating',\r\n          status: 'rating',\r\n          render: (text, record) => (\r\n            <Rate\r\n              type=\"\"\r\n              disabled\r\n              key=\"ratingkey\"\r\n              allowHalf\r\n              value={record.score}\r\n              style={{ fontSize: '15px', marginLeft: '0px' }}\r\n            />\r\n          )\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onRefresherDetailUser();\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      email,\r\n      name,\r\n      imageUrl,\r\n      experience,\r\n      isTeacher,\r\n      verify,\r\n      status,\r\n      contracts\r\n    } = this.props.location.userDetail\r\n      ? this.props.location.userDetail\r\n      : {\r\n          email: null,\r\n          name: null,\r\n          imageUrl: null,\r\n          isTeacher: null,\r\n          experience: null,\r\n          verify: null,\r\n          status: null,\r\n          contracts: null\r\n        };\r\n    const extraContent = (\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          width: 'max-content',\r\n          justifyContent: 'flex-end'\r\n        }}\r\n      >\r\n        <Statistic\r\n          title=\"Time commit\"\r\n          value={isTeacher ? status.timeCommit + ' h' : null}\r\n          style={{\r\n            marginRight: 32\r\n          }}\r\n        />\r\n        <Statistic\r\n          title=\"Hour rate\"\r\n          prefix=\"$\"\r\n          value={isTeacher ? status.hourRate : null}\r\n        />\r\n      </div>\r\n    );\r\n    const content = (\r\n      <div className=\"content\">\r\n        <Title level={3}>User profiles</Title>\r\n        <Divider />\r\n        <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n          <Title level={4}>\r\n            {experience\r\n              ? experience.skill.map((item, index) => {\r\n                  if (index === experience.skill.length - 1) return item.title;\r\n                  return item.title + ' - ';\r\n                })\r\n              : null}\r\n          </Title>\r\n          {isTeacher ? extraContent : null}\r\n        </div>\r\n        <Paragraph>\r\n          {experience && experience.introduction\r\n            ? experience.introduction.description\r\n            : null}\r\n        </Paragraph>\r\n        {isTeacher ? (\r\n          <div>\r\n            <Divider />\r\n            <Title level={4}>Level</Title>\r\n            <div>\r\n              {isTeacher ? (\r\n                <Tag key={experience.level._id} color=\"geekblue\">\r\n                  {experience.level.title.toUpperCase()}\r\n                </Tag>\r\n              ) : null}\r\n            </div>\r\n            <Divider />\r\n            <Title level={4}>Skill</Title>\r\n            <div>\r\n              {experience.skill.map(item => (\r\n                <Tag key={item._id} color=\"geekblue\">\r\n                  {item.title.toUpperCase()}\r\n                </Tag>\r\n              ))}\r\n            </div>\r\n            <Divider />\r\n            <Title level={4}>Education Level</Title>\r\n            <div>\r\n              {experience.educationLevel.map(item => (\r\n                <Tag key={item._id} color=\"geekblue\">\r\n                  {item.title.toUpperCase()}\r\n                </Tag>\r\n              ))}\r\n            </div>\r\n            <Divider />\r\n            <Title level={4}>Teaching location</Title>\r\n            <div>\r\n              <Tag key={experience.location._id} color=\"geekblue\">\r\n                {experience.location.city.toUpperCase()}\r\n              </Tag>\r\n              {experience.location.district.map(item => (\r\n                <Tag color=\"green\" key={item._id}>\r\n                  {item.name}\r\n                </Tag>\r\n              ))}\r\n              <Divider />\r\n            </div>\r\n          </div>\r\n        ) : null}\r\n        <Title level={4}>History Contract</Title>\r\n        <Table\r\n          bordered\r\n          columns={this.state.userColumns}\r\n          dataSource={contracts}\r\n          rowKey={record => {\r\n            return record._id;\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n\r\n    return (\r\n      <div style={{ background: 'white' }}>\r\n        {this.state.home}\r\n        <PageHeader\r\n          title={name}\r\n          style={{\r\n            border: '1px solid rgb(235, 237, 240)',\r\n            background: 'white!important'\r\n          }}\r\n          subTitle={email}\r\n          tags={\r\n            isTeacher ? (\r\n              <Tag color=\"#87d068\">Teacher</Tag>\r\n            ) : (\r\n              <Tag color=\"#2db7f5\">Student</Tag>\r\n            )\r\n          }\r\n          avatar={{\r\n            src: imageUrl\r\n          }}\r\n          extra={[\r\n            isTeacher ? (\r\n              <Popover\r\n                key={name + 'title'}\r\n                content={\r\n                  <div>\r\n                    {status.availability\r\n                      ? 'Teacher is free now'\r\n                      : 'Teacher is busy now'}\r\n                  </div>\r\n                }\r\n                trigger=\"hover\"\r\n              >\r\n                <Tag color={status.availability ? '#2db7f5' : '#f50'}>\r\n                  Availability\r\n                </Tag>\r\n              </Popover>\r\n            ) : null,\r\n            verify ? (\r\n              <Popover\r\n                key={name}\r\n                content={<div>Verified user</div>}\r\n                trigger=\"hover\"\r\n              >\r\n                <Icon\r\n                  type=\"check-circle\"\r\n                  theme=\"twoTone\"\r\n                  twoToneColor=\"#52c41a\"\r\n                />\r\n              </Popover>\r\n            ) : null,\r\n            isTeacher ? (\r\n              <div key=\"ratingdiv\">\r\n                <Row key=\"ratingrow\">\r\n                  <Rate\r\n                    type=\"\"\r\n                    disabled\r\n                    key=\"ratingkey\"\r\n                    allowHalf\r\n                    defaultValue={0}\r\n                    style={{ fontSize: '18px', marginLeft: '0px' }}\r\n                  />\r\n                </Row>\r\n                <Row key=\"valuerating\">haha</Row>\r\n              </div>\r\n            ) : null\r\n          ]}\r\n        >\r\n          {content}\r\n        </PageHeader>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchtoProps = dispatch => ({\r\n  onRefresherDetailUser: () => dispatch(actions.refreshMessageUUser())\r\n});\r\nexport default connect(null, mapDispatchtoProps)(DetailUser);\r\n"],"sourceRoot":""}