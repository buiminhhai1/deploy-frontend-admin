{"version":3,"sources":["../divider/index.jsx","containers/Location/Location.js"],"names":["__rest","s","e","t","Object","i","p","props","getPrefixCls","customizePrefixCls","type","orientation","className","children","dashed","restProps","prefixCls","orientationPrefix","classString","classNames","role","Option","Select","Search","Input","Location","handleDeleteForm","a","async","_id","state","onDeleteLocation","setState","visibleConfirm","confirmLoading","handleSubmitUpdateForm","city","district","defaultValue","map","item","name","onUpdateLocation","visible","onCreateLocation","handleCancel","onCityChange","value","target","onAddNewLocation","modalName","handleChange","newarr","toString","split","confirmName","locationColumns","title","dataIndex","key","render","text","record","districts","color","toUpperCase","onClick","defaultSelect","data","forEach","this","onGetListLocation","onRefreshMessage","error","actionMessage","message","success","style","margin","span","offset","placeholder","onSearch","onGetListSkill","enterButton","spinning","loading","background","columns","dataSource","locationData","size","onOk","onCancel","footer","disabled","marginBottom","onChange","marginTop","mode","width","Component","connect","location","dispatch","actions","searchString"],"mappings":"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","file":"static/js/18.3a992643.chunk.js","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { ConfigConsumer } from '../config-provider';\nconst Divider = props => (<ConfigConsumer>\n    {({ getPrefixCls }) => {\n    const { prefixCls: customizePrefixCls, type = 'horizontal', orientation = 'center', className, children, dashed } = props, restProps = __rest(props, [\"prefixCls\", \"type\", \"orientation\", \"className\", \"children\", \"dashed\"]);\n    const prefixCls = getPrefixCls('divider', customizePrefixCls);\n    const orientationPrefix = orientation.length > 0 ? `-${orientation}` : orientation;\n    const classString = classNames(className, prefixCls, `${prefixCls}-${type}`, {\n        [`${prefixCls}-with-text${orientationPrefix}`]: children,\n        [`${prefixCls}-dashed`]: !!dashed,\n    });\n    return (<div className={classString} {...restProps} role=\"separator\">\n          {children && <span className={`${prefixCls}-inner-text`}>{children}</span>}\n        </div>);\n}}\n  </ConfigConsumer>);\nexport default Divider;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  Table,\r\n  Spin,\r\n  Icon,\r\n  Divider,\r\n  Tag,\r\n  Modal,\r\n  Input,\r\n  Select,\r\n  message,\r\n  Col,\r\n  Row,\r\n  Button\r\n} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst { Option } = Select;\r\nconst { Search } = Input;\r\n\r\nclass Location extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      _id: '',\r\n      city: '',\r\n      district: [],\r\n      defaultValue: [],\r\n      modalName: '',\r\n      confirmName: 'Delete skill',\r\n      locationColumns: [\r\n        {\r\n          title: 'Thành phố - tỉnh',\r\n          dataIndex: 'city',\r\n          key: 'city',\r\n          render: (text, record) => (\r\n            <span>\r\n              <strong>{record.city}</strong>\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Quận - Huyện',\r\n          key: 'district',\r\n          render: (text, districts) => (\r\n            <span>\r\n              {districts.district.map(district => {\r\n                return (\r\n                  <Tag color={'geekblue'} key={district.name}>\r\n                    <strong>{district.name.toUpperCase()}</strong>\r\n                  </Tag>\r\n                );\r\n              })}\r\n            </span>\r\n          )\r\n        },\r\n        {\r\n          title: 'Action',\r\n          key: 'action',\r\n          render: (text, record) => (\r\n            <span>\r\n              <Icon\r\n                type=\"edit\"\r\n                title=\"edit location\"\r\n                onClick={async () => {\r\n                  let defaultSelect = [];\r\n                  let data = [];\r\n                  record.district.forEach(item => {\r\n                    defaultSelect = [...defaultSelect, item.name];\r\n                    data = [\r\n                      ...data,\r\n                      <Option key={item.name}>{item.name}</Option>\r\n                    ];\r\n                  });\r\n                  await this.setState({\r\n                    visible: true,\r\n                    _id: record._id,\r\n                    city: record.city,\r\n                    district: data,\r\n                    defaultValue: defaultSelect,\r\n                    modalName: 'Edit location'\r\n                  });\r\n                }}\r\n              />\r\n              <Divider type=\"vertical\" />\r\n              <Icon\r\n                type=\"delete\"\r\n                title=\"delete location\"\r\n                onClick={async () => {\r\n                  await this.setState({\r\n                    visibleConfirm: true,\r\n                    _id: record._id,\r\n                    city: record.city\r\n                  });\r\n                }}\r\n              />\r\n            </span>\r\n          )\r\n        }\r\n      ],\r\n      visible: false,\r\n      visibleConfirm: false,\r\n      confirmLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onGetListLocation('');\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.props.onRefreshMessage();\r\n    if (this.props.error) {\r\n      this.render.actionMessage = message.error(this.props.message);\r\n    } else if (this.props.message) {\r\n      this.render.actionMessage = message.success(this.props.message);\r\n    }\r\n  }\r\n\r\n  handleDeleteForm = async () => {\r\n    const { _id } = this.state;\r\n    await this.props.onDeleteLocation(_id);\r\n    this.setState({\r\n      visibleConfirm: false,\r\n      confirmLoading: false\r\n    });\r\n  };\r\n\r\n  handleSubmitUpdateForm = async () => {\r\n    await this.setState({\r\n      confirmLoading: true\r\n    });\r\n    const { _id, city } = this.state;\r\n    const district = this.state.defaultValue.map(item => {\r\n      return { name: item };\r\n    });\r\n    if (_id) {\r\n      await this.props.onUpdateLocation(_id, city, district);\r\n      this.setState({\r\n        visible: false,\r\n        confirmLoading: false\r\n      });\r\n    } else {\r\n      await this.props.onCreateLocation(city, district);\r\n      this.setState({\r\n        visible: false,\r\n        confirmLoading: false\r\n      });\r\n    }\r\n  };\r\n\r\n  handleCancel = async () => {\r\n    await this.setState({\r\n      visible: false,\r\n      visibleConfirm: false\r\n    });\r\n  };\r\n\r\n  onCityChange = ({ target: { value } }) => {\r\n    this.setState({\r\n      city: value\r\n    });\r\n  };\r\n\r\n  onAddNewLocation = async () => {\r\n    await this.setState({\r\n      visible: true,\r\n      _id: '',\r\n      city: '',\r\n      district: [],\r\n      defaultValue: [],\r\n      modalName: 'Add new location'\r\n    });\r\n  };\r\n\r\n  handleChange = async value => {\r\n    const newarr = value.toString().split(',');\r\n    await this.setState({\r\n      defaultValue: newarr\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { visible, confirmLoading, visibleConfirm } = this.state;\r\n    const actionMessage = null;\r\n\r\n    return (\r\n      <div>\r\n        <Row\r\n          style={{\r\n            margin: '10px 0 20px 0'\r\n          }}\r\n        >\r\n          <Col span={6} offset={0}>\r\n            <Search\r\n              placeholder=\"input search text\"\r\n              onSearch={value => {\r\n                this.props.onGetListSkill(value);\r\n              }}\r\n              enterButton\r\n            />\r\n          </Col>\r\n          <Col span={1} offset={16}>\r\n            <Button type=\"primary\" onClick={this.onAddNewLocation}>\r\n              Add\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <Spin spinning={this.props.loading}>\r\n          <div\r\n            style={{\r\n              background: 'white'\r\n            }}\r\n          >\r\n            <Table\r\n              columns={this.state.locationColumns}\r\n              dataSource={this.props.locationData}\r\n              size=\"middle\"\r\n            />\r\n            {actionMessage}\r\n            {this.props.locationData ? (\r\n              <div>\r\n                <Modal\r\n                  title={this.state.modalName}\r\n                  visible={visible}\r\n                  onOk={this.handleSubmitUpdateForm}\r\n                  confirmLoading={confirmLoading}\r\n                  onCancel={this.handleCancel}\r\n                  footer={[\r\n                    <Button key=\"back\" onClick={this.handleCancel}>\r\n                      Cancel\r\n                    </Button>,\r\n                    <Button\r\n                      key=\"Block\"\r\n                      type=\"primary\"\r\n                      onClick={this.handleSubmitUpdateForm}\r\n                      disabled={!(this.state.city && this.state.district)}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                  <div>\r\n                    <div style={{ marginBottom: '5px' }}>\r\n                      City\r\n                      <span\r\n                        style={{\r\n                          color: 'red',\r\n                          marginBottom: '5px'\r\n                        }}\r\n                      >\r\n                        *\r\n                      </span>\r\n                    </div>\r\n                    <Input\r\n                      placeholder=\"Location\"\r\n                      value={this.state.city}\r\n                      onChange={this.onCityChange}\r\n                    />\r\n                  </div>\r\n                  <div style={{ marginTop: '10px' }}>\r\n                    <div style={{ marginBottom: '5px' }}>\r\n                      District\r\n                      <span\r\n                        style={{\r\n                          color: 'red',\r\n                          marginBottom: '5px'\r\n                        }}\r\n                      >\r\n                        *\r\n                      </span>\r\n                    </div>\r\n                    <Select\r\n                      mode=\"tags\"\r\n                      style={{ width: '100%' }}\r\n                      placeholder=\"Tags Mode\"\r\n                      onChange={this.handleChange}\r\n                      value={this.state.defaultValue}\r\n                    >\r\n                      {this.state.district}\r\n                    </Select>\r\n                  </div>\r\n                </Modal>\r\n                <Modal\r\n                  title={this.state.confirmName}\r\n                  visible={visibleConfirm}\r\n                  onOk={this.handleDeleteForm}\r\n                  confirmLoading={confirmLoading}\r\n                  onCancel={this.handleCancel}\r\n                  footer={[\r\n                    <Button key=\"back\" onClick={this.handleCancel}>\r\n                      Cancel\r\n                    </Button>,\r\n                    <Button\r\n                      key=\"Block\"\r\n                      type=\"danger\"\r\n                      onClick={this.handleDeleteForm}\r\n                      disabled={!this.state._id}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  ]}\r\n                >\r\n                  <span>\r\n                    Do you want delete\r\n                    <strong>{' ' + this.state.city}</strong>\r\n                  </span>\r\n                </Modal>\r\n              </div>\r\n            ) : null}\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  locationData: state.location.locationData,\r\n  message: state.location.message,\r\n  error: state.location.error,\r\n  loading: state.location.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onCreateLocation: (city, district) =>\r\n    dispatch(actions.createLocation(city, district)),\r\n  onUpdateLocation: (_id, city, district) =>\r\n    dispatch(actions.updateLocation(_id, city, district)),\r\n  onDeleteLocation: _id => dispatch(actions.deleteLocation(_id)),\r\n  onGetListLocation: searchString =>\r\n    dispatch(actions.getListLocation(searchString)),\r\n  onRefreshMessage: () => dispatch(actions.refreshMessageCRUDLocation())\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Location);\r\n"],"sourceRoot":""}