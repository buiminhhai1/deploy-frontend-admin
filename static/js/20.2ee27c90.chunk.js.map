{"version":3,"sources":["containers/Contract/Contract.js"],"names":["Search","Input","Contract","props","getDetailUser","userId","a","async","onGetDetailUser","setState","redirect","to","pathname","userDetail","state","contractColumns","title","dataIndex","key","render","text","record","idStudent","student","content","trigger","onClick","style","color","name","email","idTeacher","teacher","from","totalHourCommit","hourRate","status","type","disabled","allowHalf","value","score","fontSize","marginLeft","contextMenu","sytle","paddingRight","marginRight","this","onGetListContract","margin","span","offset","placeholder","enterButton","spinning","loading","loadingUser","background","columns","dataSource","contractData","length","size","Component","connect","contract","error","message","user","dispatch","actions"],"mappings":"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","file":"static/js/20.2ee27c90.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Table, Spin, Rate, Tag, Input, Popover, Col, Row, Button } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport { NavLink, Redirect } from 'react-router-dom';\r\nimport * as actions from '../../store/actions/index';\r\n\r\nconst { Search } = Input;\r\n\r\nclass Contract extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: '',\r\n      contractColumns: [\r\n        {\r\n          title: 'Student Detail',\r\n          dataIndex: 'student',\r\n          key: 'student',\r\n          render: (text, record) => {\r\n            const idStudent = record.student.userId;\r\n            return (\r\n              <div>\r\n                <Popover\r\n                  content={<div>View detail Student</div>}\r\n                  trigger=\"hover\"\r\n                >\r\n                  <div\r\n                    onClick={() => {\r\n                      this.getDetailUser(idStudent);\r\n                    }}\r\n                  >\r\n                    <strong style={{ color: '#003a8c' }}>\r\n                      {record.student.name}\r\n                      <br />\r\n                      {record.student.email}\r\n                    </strong>\r\n                  </div>\r\n                </Popover>\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'Teacher Detail',\r\n          dataIndex: 'teacher',\r\n          key: 'teacher',\r\n          render: (text, record) => {\r\n            const idTeacher = record.teacher.userId;\r\n            return (\r\n              <div>\r\n                <Popover\r\n                  content={<div>Click view detail Teacher</div>}\r\n                  trigger=\"hover\"\r\n                >\r\n                  <div\r\n                    onClick={() => {\r\n                      this.getDetailUser(idTeacher);\r\n                    }}\r\n                  >\r\n                    <strong style={{ color: '#003a8c' }}>\r\n                      {record.teacher.name}\r\n                      <br />\r\n                      {record.teacher.email}\r\n                    </strong>\r\n                  </div>\r\n                </Popover>\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'From to',\r\n          dataIndex: 'timecontract',\r\n          key: 'timecontract',\r\n          render: (text, record) => {\r\n            return (\r\n              <div>\r\n                {record.from} <br />\r\n                {record.to}\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'hours & price',\r\n          dataIndex: 'hrsprice',\r\n          key: 'hrsprice',\r\n          render: (text, record) => {\r\n            return (\r\n              <div>\r\n                <strong>{record.totalHourCommit + ' hrs'}</strong>\r\n                <br />\r\n                <strong>{record.hourRate + ' $'}</strong>\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'Value',\r\n          dataIndex: 'value',\r\n          key: 'value',\r\n          render: (text, record) => {\r\n            return (\r\n              <div>\r\n                <strong>\r\n                  {record.totalHourCommit * record.hourRate + ' $'}\r\n                </strong>\r\n              </div>\r\n            );\r\n          }\r\n        },\r\n        {\r\n          title: 'Status',\r\n          dataIndex: 'status',\r\n          key: 'status',\r\n          render: (text, record) => {\r\n            let color;\r\n            let status;\r\n            switch (record.status) {\r\n              case 2:\r\n                color = '#87d068';\r\n                status = 'Success';\r\n                break;\r\n              case 3:\r\n                color = '#f50';\r\n                status = 'Fail';\r\n                break;\r\n              default:\r\n                color = '#2db7f5';\r\n                status = 'Pending';\r\n            }\r\n            return <Tag color={color}>{status}</Tag>;\r\n          }\r\n        },\r\n        {\r\n          title: 'Rating',\r\n          dataIndex: 'rating',\r\n          status: 'rating',\r\n          render: (text, record) => (\r\n            <Rate\r\n              type=\"\"\r\n              disabled\r\n              key=\"ratingkey\"\r\n              allowHalf\r\n              value={record.score}\r\n              style={{ fontSize: '15px', marginLeft: '0px' }}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          title: 'action',\r\n          dataIndex: 'action',\r\n          key: 'action',\r\n          render: (text, record) => {\r\n            return (\r\n              <div>\r\n                <Popover\r\n                  content={<div>View detail Contract</div>}\r\n                  trigger=\"hover\"\r\n                >\r\n                  <NavLink\r\n                    to={{\r\n                      pathname: '/detailcontract',\r\n                      userDetail: record\r\n                    }}\r\n                    contextMenu=\"view detail\"\r\n                    sytle={{ paddingRight: '5px' }}\r\n                  >\r\n                    <Button type=\"primary\" style={{ marginRight: '5px' }}>\r\n                      Detail\r\n                    </Button>\r\n                  </NavLink>\r\n                </Popover>\r\n              </div>\r\n            );\r\n          }\r\n        }\r\n      ]\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.onGetListContract();\r\n  }\r\n\r\n  componentDidUpdate() { }\r\n\r\n  getDetailUser = async userId => {\r\n    await this.props.onGetDetailUser(userId);\r\n    await this.setState({\r\n      redirect: (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/contract',\r\n            userDetail: this.props.userDetail\r\n          }}\r\n        />\r\n      )\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.props.userDetail ? (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/userdetail',\r\n              userDetail: this.props.userDetail\r\n            }}\r\n          />\r\n        ) : null}\r\n        <Row style={{ margin: '10px 0 20px 0' }}>\r\n          <Col span={6} offset={0}>\r\n            <Search\r\n              placeholder=\"input search text\"\r\n              // onSearch={value => {\r\n              //   // this.props.onGetListSkill(value);\r\n              // }}\r\n              enterButton\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Spin spinning={this.props.loading || this.props.loadingUser}>\r\n          <div style={{ background: 'white' }}>\r\n            {\r\n              <Table\r\n                columns={this.state.contractColumns}\r\n                dataSource={\r\n                  this.props.contractData && \r\n                  this.props.contractData.length > 0\r\n                    ? this.props.contractData\r\n                    : []\r\n                }\r\n                size=\"middle\"\r\n              />\r\n            }\r\n          </div>\r\n        </Spin>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  loading: state.contract.loading,\r\n  contractData: state.contract.contractData,\r\n  error: state.contract.error,\r\n  message: state.contract.message,\r\n  userDetail: state.user.userDetail,\r\n  loadingUser: state.user.loading\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGetListContract: () => dispatch(actions.getListContract()),\r\n  onGetDetailUser: userId => dispatch(actions.getDetailUser(userId))\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Contract);\r\n"],"sourceRoot":""}